{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/newproduct/newproduct.component.css","webpack:///./src/app/newproduct/newproduct.component.html","webpack:///./src/app/newproduct/newproduct.component.ts","webpack:///./src/app/product.service.ts","webpack:///./src/app/product/product.component.css","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductComponent } from './product/product.component';\nimport { NewproductComponent } from './newproduct/newproduct.component';\nimport { DetailsComponent } from './details/details.component';\nimport { EditComponent } from './edit/edit.component';\n\nconst routes: Routes = [\n  {path: 'products', component: ProductComponent},\n  {path: 'products/new', component: NewproductComponent},\n  {path: 'products/:id', component: DetailsComponent},\n  {path: 'products/:id/edit', component: EditComponent},\n  {path: '', redirectTo: \"/products\", pathMatch: 'full'},\n  {path: '**', redirectTo: \"/product\"}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div id='appWrapper'>\\n  <h1>Commerce Manager</h1>\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit {\n  title = 'app';\n\n  ngOnInit(){\n    console.log('test')\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProductComponent } from './product/product.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\nimport { NewproductComponent } from './newproduct/newproduct.component';\nimport { ProductService } from './product.service';\nimport { HttpClientModule } from '@angular/common/http'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProductComponent,\n    EditComponent,\n    DetailsComponent,\n    NewproductComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [ProductService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class='detBox'>\\n  <h3>Details for {{product.name}}</h3><br><br>\\n  <h4>Name: {{product.name}}</h4>\\n  <h4>Qty: {{product.qty}}</h4>\\n  <h4>Price: ${{product.price}}</h4>\\n  <div class='btnBox'>\\n    <button class='btn' [routerLink]=\\\"['/products']\\\">Back</button>\\n    <button class='btn' (click)='delete(product._id)' *ngIf=\\\"product.qty == 0\\\">Delete</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { ActivatedRoute, Router } from '@angular/router'\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n  product: any;\n\n  constructor(private productservice: ProductService, private route: ActivatedRoute, private router: Router){}\n\n  ngOnInit(){\n    this.productservice.getProduct(this.route.params['value'].id)\n    .subscribe(data => {\n      if(!data['error']){\n        this.product = data\n      }\n      else{\n        console.log(data)\n      }\n    })\n  }\n\n  delete(id){\n    this.productservice.delete(id)\n    .subscribe(data => {\n      if(!data['error']){\n        this.router.navigate(['/products'])\n      }\n      else{\n        console.log(data)\n      }\n    })\n  }\n}\n","module.exports = \".red{\\n    font-size:10px;\\n    color:red;\\n}\"","module.exports = \"<h3>Update {{product.name}}</h3>\\n<div>\\n  <form (submit)='submit()'>\\n    Name: <input type=\\\"text\\\" name=\\\"newProduct.name\\\" id=\\\"newProduct.name\\\" required minlength='3' [(ngModel)]='newProduct.name' #name='ngModel' class='form-control'>\\n    Qty: <input type=\\\"number\\\" oninput=\\\"validity.valid||(value='');\\\" name=\\\"newProduct.qty\\\" id=\\\"newProduct.qty\\\" required min='0' [(ngModel)]='newProduct.qty' #qty='ngModel' class='form-control'>\\n    Price: $ <input type=\\\"number\\\" pattern=\\\"[0-9]+(\\\\.[0-9]{0,2})?%?\\\" name=\\\"newProduct.price\\\" id=\\\"newProduct.price\\\" required min='0' [(ngModel)]='newProduct.price' #price='ngModel' class='form-control'>\\n    <br>\\n    <p class='red' *ngIf=\\\"qty.dirty && !qty.valid\\\">Qty must be a value of 0 or more</p>\\n    <p class='red' *ngIf=\\\"name.dirty && !name.valid\\\">Name must have at least 3 characters</p>\\n    <p class='red' *ngIf='price.dirty && !price.valid'>Price must be a valid price of 0.01 or more</p>\\n    <p class='red' *ngFor=\\\"let error of errors\\\">{{error}}</p>\\n    <button class='btn' (click)='reset()' type='button'>Reset</button>\\n    <button class='btn' type='button' [routerLink]=\\\"['/products']\\\">Cancel</button>\\n    <button class='btn' *ngIf='name.valid && qty.valid && price.valid && (name.dirty || price.dirty || qty.dirty)'>Update</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  product: any;\n  newProduct: any;\n  errors: any;\n\n  constructor(private productservice: ProductService, private route: ActivatedRoute, private router: Router){}\n\n  ngOnInit(){\n    this.errors = []\n    this.newProduct = {name: '', qty: undefined, price: undefined}\n    this.productservice.getProduct(this.route.params['value'].id)\n    .subscribe(data => {\n      if(!data['error']){\n        this.product = data\n        this.reset()\n      }\n      else{\n        for(let error of Object.keys(data['error']['errors'])){\n          this.errors.push(data['error']['errors'][error].message)\n        }\n      }\n    })\n  }\n\n  reset(){\n    this.newProduct.name = this.product.name\n    this.newProduct.qty = this.product.qty\n    this.newProduct.price = this.product.price\n  }\n\n  submit(){\n    this.errors = []\n    this.productservice.update(this.newProduct)\n    .subscribe(data => {\n      if(!data['error']){\n        this.router.navigate(['/products'])\n      }\n      else{\n        console.log(data['error'])\n        for(let error of Object.keys(data['error']['errors'])){\n          this.errors.push(data['error']['errors'][error].message)\n        }\n      }\n    })\n  }\n}\n","module.exports = \".red{\\n    font-size:10px;\\n    color:red;\\n}\"","module.exports = \"<div class='formBox'>\\n  <form (submit)='submit()'>\\n      Name: <input type=\\\"text\\\" name=\\\"newProduct.name\\\" id=\\\"newProduct.name\\\" required minlength='3' [(ngModel)]='newProduct.name' #name='ngModel' class='form-control'>\\n      Qty: <input type=\\\"number\\\" oninput=\\\"validity.valid||(value='');\\\" name=\\\"newProduct.qty\\\" id=\\\"newProduct.qty\\\" required min='1' [(ngModel)]='newProduct.qty' #qty='ngModel' class='form-control'>\\n      Price: $ <input type=\\\"number\\\" pattern=\\\"[0-9]+(\\\\.[0-9]{0,2})?%?\\\" name=\\\"newProduct.price\\\" id=\\\"newProduct.price\\\" required min='0.01' step=0.01 [(ngModel)]='newProduct.price' #price='ngModel' class='form-control'>\\n      <br>\\n      <p class='red' *ngIf=\\\"qty.dirty && !qty.valid\\\">Qty must be a whole number of 1 or more</p>\\n      <p class='red' *ngIf=\\\"name.dirty && !name.valid\\\">Name must have at least 3 characters</p>\\n      <p class='red' *ngIf='price.dirty && !price.valid'>Price must be a valid price of 0.01 or more</p>\\n      <p class='red' [(ngModel)]='error'>{{error[0]}}</p>\\n      <button id='sub' class='btn' type='submit' *ngIf='name.valid && qty.valid && price.valid'>Submit</button>\\n      <button class='btn' [routerLink]=\\\"['/products']\\\" type=\\\"button\\\">Cancel</button>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-newproduct',\n  templateUrl: './newproduct.component.html',\n  styleUrls: ['./newproduct.component.css']\n})\nexport class NewproductComponent implements OnInit {\n  newProduct: any;\n  errors: any;\n\n  constructor(private productservice: ProductService, private router: Router){}\n\n  ngOnInit(){\n    this.errors = []\n    this.newProduct = {name: '', price: undefined, qty: 0}\n  }\n\n  submit(){\n    this.productservice.newProduct(this.newProduct).subscribe(data => {\n      if(!data['error']){\n        this.router.navigate(['/products'])\n      }\n      else{\n        for(let error of Object.keys(data['error']['errors'])){\n          this.errors.push(data['error']['errors'][error].message)\n        }\n      }\n    })\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private _http: HttpClient){}\n\n  getProducts(){\n    return this._http.get('/api/products')\n  }\n\n  newProduct(product){\n    return this._http.post('/api/products', product)\n  }\n\n  getProduct(id){\n    return this._http.get('/api/products/' + id)\n  }\n\n  delete(id){\n    return this._http.delete('/api/products/' + id)\n  }\n\n  update(product){\n    return this._http.put('/api/products/' + product._id, product)\n  }\n}\n","module.exports = \"\"","module.exports = \"<button class='btn' [routerLink]=\\\"['/products/new']\\\"> Add New Product</button>\\n\\n<table class='table table-striped' *ngIf=\\\"products[0]\\\">\\n  <thead>\\n    <tr>\\n      <th>ID</th>\\n      <th>Name</th>\\n      <th>Qty</th>\\n      <th>Price</th>\\n      <th></th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let product of products\\\">\\n      <td>{{product._id}}</td>\\n      <td>{{product.name}}</td>\\n      <td>{{product.qty}}</td>\\n      <td>${{product.price}}</td>\\n      <td><button class='btn' [routerLink]=\\\"['/products', product._id]\\\">Details</button><button class='btn' [routerLink]=\\\"['/products', product._id, 'edit']\\\">Edit</button></td>\\n    </tr>\\n  </tbody>\\n</table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../product.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.css']\n})\nexport class ProductComponent implements OnInit {\n  products: any;\n\n  constructor(private productservice: ProductService) { }\n\n  ngOnInit(){\n    console.log('component')\n    this.productservice.getProducts().subscribe(data => {\n      console.log(data)\n      if(data[0] != 'error'){\n        this.products = data\n      }\n      else{\n        console.log(data['error'])\n      }\n    })\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}